{{template "base"}}

{{template "navbar"}}

<div class="container">
    <h2 class="mb-4">{{.User.First}}</h2>
    <p class="mb-3">Total Workouts for 2022: {{.Count}}</p>
    <p>Let's break the numbers down by exercise</p>

    <p id="testing-return"></p>

</div>
<div>
  <p><a href="/session/entry">Log in a new workout!</a></p>
</div>
<select id="select" class="form-select" aria-label="Default select example">
  <datalist id="exercises">
    <option>View Results for selected lift</option>
    <option value="OHP">OHP</option>
    <option value="Bench Press">Bench Press</option>
    <option value="Decline Bench Press">Decline Bench Press</option>
    <option value="Incline Bench Press">Incline Bench Press</option>
    <option value="Squats">Squats</option>
    <option value="Deadlift">Deadlift</option>
  </datalist>
</select>

<div class="chart-container" style="position: relative; height:80vh; width:90vw">
  <h3 style="margin:10px 0;">Monthly Results</h3>
  <canvas id="myChart"></canvas>
</div>



<script src="https://cdn.jsdelivr.net/npm/chart.js@4.0.1/dist/chart.umd.min.js"></script>
<script>
let labels = [];
let datasets = [];

var ctx = document.getElementById("myChart").getContext("2d");
var chartArea = document.getElementById("myChart")
chartArea.style.display = "none";
var data = {
          labels: labels,
          datasets: datasets,
          borderWidth: 1
};

var myBarChart = new Chart(ctx, {
    type: 'bar',
    data: data,
    options: {
        barValueSpacing: 20,
        responsive: true,
        scales: {
            y: {
          beginAtZero: true
          }
        }
    }
});

function CheckError(response) {
    if (response.status >= 200 && response.status <= 299) {
      return response.json();
    } else {
      throw Error(response.statusText);
    }
  }

document.getElementById("select").addEventListener('change', (event) => {

  var target = event.target.value

  fetch(`/dashboard/?exercise=${target}`,{
      headers: {
          "Content-Type": "application/x-www-form-urlencoded",
      },
      method:'POST'
    }).then(CheckError)
      .then(response => {
        
        labels=[];
        datasets = [];
        var dataValues = []
        
        for(i = 0;i < response.message.length ;i++){
          labels.push(String(i+1))  
        }

        response.message.forEach((val) => {
              dataValues.push(val)
        });

        datasets.push({
              label: `${target}`,
              backgroundColor: "#9BD0F5",
              data: dataValues
        });
        chartArea.style.display = "block";
        myBarChart.data.labels = labels;
        myBarChart.data.datasets = datasets;
        myBarChart.update()
        
      }).catch((error) => {
          var m = document.getElementById("testing-return")
          return m.innerHTML = error.message;
      });
});

function createChart(data){


}

</script>

{{template "footer"}}

