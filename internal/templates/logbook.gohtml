{{template "base"}}

<h1>Log Book</h1>
<div class="position-fixed top-0 end-0 p-3" style="z-index: 11">
  <div id="liveToast" class="toast hide" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="toast-header">
      <strong class="me-auto">Sessions</strong>
      <small class="text-muted">Workout Update</small>
      <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div id="toast-body" class="toast-body"></div>
  </div>
</div>

  <div class="accordion" id="accordionExample">
  {{range .}}
    <div class="accordion-item">
      <h2 class="accordion-header" id="heading-{{.ID}}">
        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-{{.ID}}" aria-expanded="true" aria-controls="{{.ID}}">
          {{.Date}}
        </button>
      </h2>
      <div id="collapse-{{.ID}}" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
        <div class="accordion-body">
              <form id="table-{{.ID}}">
              <table class="table table-info table-hover">
                <thead>
                  <tr>
                    <th scope="col">Description</th>
                    <th scope="col">Sets</th>
                    <th scope="col">Reps</th>
                    <th scope="col">Weight</th>
                  </tr>
                </thead>
                <tbody id="session-entry-{{.ID}}">
                <p id="{{.ID}}">Gym Session: {{.ID}}</p>
                {{range $key, $val := .Workout}}
                  <tr>
                    <td><input type="text" value={{$key}} class="form-control entry-input" id="description-{{$key}}" name="description" placeholder="description" aria-describedby="exercise name" disabled></td>
                    <td><input type="number" value={{$val.Sets}} class="form-control entry-input" id="sets-{{$key}}" name="sets" placeholder="# of sets" aria-describedby="exercise amount of sets" disabled></td>
                    <td><input type="number" value={{$val.Reps}} class="form-control entry-input" id="reps-{{$key}}" name="reps" placeholder="# of reps" aria-describedby="exercise amount of reps" disabled></td>
                    <td><input type="number" value={{$val.Weight}} class="form-control entry-input" id="weight-{{$key}}" name="weight" placeholder="# of lbs" aria-describedby="exercise amount of weight" disabled></td>
                  </tr>
                
                {{end}}
                </tbody>
              </table>
              <button id="btn {{.ID}}" class="btn btn-dark" style="display:none; margin: 2rem 0;" type="button" name="update-form" onclick="updateEntry({{.ID}},'/user/session/edit/?id={{.ID}}')">Update</button>
            </form>
            <button id="btn {{.ID}} edit" class="btn btn-dark" type="button" name="edit-form" onclick="editEntry({{.ID}})">Edit</button>
            <button id="btn {{.ID}} delete" class="btn btn-dark" type="button" name="delete-form" onclick="deleteEntry('/user/session/delete/?id={{.ID}}')">Delete</button>
        </div>
      </div>
    </div>
  {{end}}
  </div>
</div>

<script>

  function CheckError(response) {
    if (response.status >= 200 && response.status <= 299) {
      return response.json();
    } else {
      throw Error(response.statusText);
    }
  }

  function editEntry(id) {

    var form = document.getElementById("table-"+id)

    var submitBtn = document.getElementById("btn "+id)
    submitBtn.style.display = "block";

    var inputs = form.getElementsByTagName("input")

    for( var i = 0; i < inputs.length; i++){
      inputs[i].disabled = false;
    }
   
  }

  function updateEntry(id, url){
    
    var form = document.getElementById("table-"+id)
    var inputs = form.getElementsByTagName("input")

    let values = {
      description: [],
      sets: [],
      reps: [],
      weight: [],
    }

      

    for (var i = 0; i < inputs.length; i+=4) {
      values["description"].push(inputs[i].value)
      values["sets"].push(inputs[i+1].value)
      values["reps"].push(inputs[i+2].value)
      values["weight"].push(inputs[i+3].value)
    }

    
    fetch(url,{
      headers: {
          "Content-Type": "application/x-www-form-urlencoded",
      },
      method:'PUT',
      body: JSON.stringify(values)
    }).then(CheckError)
      .then(response => {
        document.getElementById("liveToast").style.display="block";
        document.getElementById("toast-body").innerHTML = response.message

        window.setTimeout (function(){
        document.location.href='/dashboard'
        }, 3000);
      }).catch((error) => {
          return alert(error.message)
      });
  }
  

  function deleteEntry(url){

    fetch(url,{
      method:'DELETE',
      }).then(CheckError)
        .then((response) => {
          document.getElementById("liveToast").style.display="block";
          document.getElementById("toast-body").innerHTML = response.message
          window.setTimeout (function(){
          document.location.href='/dashboard'
          }, 3000);
        }).catch((error) => {
          return alert(error.message)
        });
    }

</script>


{{template "footer"}}