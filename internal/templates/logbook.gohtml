{{template "base"}}

<h1>Log Book</h1>
<div>
  <div class="accordion" id="accordionExample">
  {{range .}}
    <div class="accordion-item">
      <h2 class="accordion-header" id="heading-{{.Index}}">
        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-{{.Index}}" aria-expanded="true" aria-controls="{{.Index}}">
          {{.Date}}
        </button>
      </h2>
      <div id="collapse-{{.Index}}" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
        <div class="accordion-body">
              <form id="table-{{.ID}}">
              <table class="table table-info table-hover">
                <thead>
                  <tr>
                    <th scope="col">Description</th>
                    <th scope="col">Sets</th>
                    <th scope="col">Reps</th>
                    <th scope="col">Weight</th>
                  </tr>
                </thead>
                <tbody id="session-entry-{{.Index}}">
                <p id="{{.ID}}">Gym Session: {{.ID}}</p>
                {{range .Workout}}
                  <tr>
                    <td><input type="text" value={{.Description}} class="form-control entry-input" id="description-{{.Description}}" name="description" placeholder="description" aria-describedby="exercise name" disabled></td>
                    <td><input type="number" value={{.Sets}} class="form-control entry-input" id="sets-{{.Description}}" name="sets" placeholder="# of sets" aria-describedby="exercise amount of sets" disabled></td>
                    <td><input type="number" value={{.Reps}} class="form-control entry-input" id="reps-{{.Description}}" name="reps" placeholder="# of reps" aria-describedby="exercise amount of reps" disabled></td>
                    <td><input type="number" value={{.Weight}} class="form-control entry-input" id="weight-{{.Description}}" name="weight" placeholder="# of lbs" aria-describedby="exercise amount of weight" disabled></td>
                  </tr>
                {{end}}
                </tbody>
              </table>
              <button id="btn {{.ID}}" class="btn btn-dark" style="display:none; margin: 2rem 0;" type="button" name="update-form" onclick="updateEntry('/user/session/edit/?id={{.ID}}')">Update</button>
            </form>
            <button id="btn-{{.ID}}-edit" class="btn btn-dark" type="button" name="edit-form" onclick="editEntry()">Edit</button>
            <button id="btn-{{.ID}}-delete" class="btn btn-dark" type="button" name="delete-form" onclick="deleteEntry('/user/session/delete/?id={{.ID}}')">Delete</button>
        </div>
      </div>
    </div>
  {{end}}
  </div>
</div>

<script>

  function CheckError(response) {
    if (response.status >= 200 && response.status <= 299) {
      return response.json();
    } else {
      throw Error(response.statusText);
    }
  }

  function editEntry() {
  {{/* const table = document.getElementById("table");
  const collection = table.getElementsByTagName("input");
  document.getElementById("demo").innerHTML = collection[3].value; */}}
    
    var submitBtn = document.getElementsByClassName("btn")[0]
    submitBtn.style.display = "block";

    var id = submitBtn.id.split(" ")[1]
    console.log(id)
    var form = document.getElementById("table-"+id)
    var inputs = form.getElementsByTagName("input")

    for( var i = 0; i < inputs.length; i++){
      inputs[i].disabled = false;
    }
   
  }

  function updateEntry(url){
    var submitBtn = document.getElementsByClassName("btn")[0]
    var id = submitBtn.id.split(" ")[1]
    var form = document.getElementById("table-"+id)
    var inputs = form.getElementsByTagName("input")
    
    var data = new FormData();

    for (var i = 0; i < inputs.length; i+=4) {
      data.append("description",inputs[i].value)
      data.append("sets",inputs[i+1].value)
      data.append("reps",inputs[i+2].value)
      data.append("weight",inputs[i+3].value)
    }


    
    fetch(url,{
      method:'PUT',
      body: JSON.stringify(data)
    }).then(CheckError)
      .then(response => {
        alert(response.message)
        window.setTimeout (function(){
        document.location.href='/dashboard'
        }, 5000);
      }).catch((error) => {
          return alert(error.message)
      });
  }

  function deleteEntry(url){

    fetch(url,{
      method:'DELETE',
      }).then(CheckError)
        .then((response) => {
          alert(response.message)
          window.setTimeout (function(){
          document.location.href='/dashboard'
          }, 5000);
        }).catch((error) => {
          return alert(error.message)
        });
    }
</script>


{{template "footer"}}